name: Unity Actions
env:
  SERVER_ADDRESS: "https://gabcsika.picidolgok.hu/"

on:
  pull_request: {}
  push: {}
  workflow_dispatch: {}

### Refer to https://game.ci/docs/github/getting-started
jobs:
  checklicense:
    name: Check for UNITY_LICENSE in GitHub Secrets
    runs-on: ubuntu-latest
    outputs:
      is_unity_license_set: ${{ steps.checklicense_job.outputs.is_unity_license_set }}
    steps:
      - name: Check whether unity activation requests should be done
        id: checklicense_job
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        run: |
            echo "Skip activation job: ${{ env.UNITY_LICENSE != '' }}"
            export is_unity_license_set="${{ env.UNITY_LICENSE != '' }}"
            echo "is_unity_license_set=$is_unity_license_set" >> $GITHUB_OUTPUT

  activation:
    if: needs.checklicense.outputs.is_unity_license_set == 'false'
    name: Request manual activation file ðŸ”‘
    runs-on: ubuntu-latest
    steps:
      # Request manual activation file
      - name: Request manual activation file
        id: getManualLicenseFile
        uses: game-ci/unity-request-activation-file@v2
      # Upload artifact (Unity_v20XX.X.XXXX.alf)
      - name: Expose as artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ steps.getManualLicenseFile.outputs.filePath }}
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}
          retention-days: 1

  build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneLinux64
#          - Android
    steps:
      - uses: actions/checkout@v4.1.2
        with:
          lfs: true
      - uses: game-ci/unity-builder@v4.2.3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v4.3.3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build
          retention-days: 1


  buildForWindows:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows
#          - StandaloneWindows64
#          - WSAPlayer
    steps:
      - uses: actions/checkout@v4.1.2
        with:
          lfs: true
      - uses: game-ci/unity-builder@v4.2.3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v4.3.3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build
          retention-days: 1

  buildForWebGL:
        name: Build for ${{ matrix.targetPlatform }}
        permissions:
          contents: write
        runs-on: ubuntu-latest
        strategy:
          fail-fast: false
          matrix:
            targetPlatform:
              - WebGL
        steps:
          - uses: actions/checkout@v4.1.2
            with:
              lfs: true
          - uses: game-ci/unity-builder@v4.2.3
            env:
              UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
              UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
              UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
            with:
              targetPlatform: ${{ matrix.targetPlatform }}
              buildMethod: BuildCommand.PerformBuild
              buildName: WebGL
          - name: Copy WebGL build to release folder
            run: |
              mkdir -p release
              mkdir -p release/game
              cp -r build/WebGL/* release/game/

          - name: "Move the folder to release/game"
            run: 
              sudo mv build/WebGL/WebGLWebGL/* release/game/;
              
          # - uses: actions/upload-artifact@v4.3.3
          #   with:
          #     name: Build-${{ matrix.targetPlatform }}
          #     path: build
          #     retention-days: 1
          - name: Deploy to GitHub Pages
            uses: JamesIves/github-pages-deploy-action@4.1.1
            if: matrix.targetPlatform == 'WebGL'
            with:
              branch: gh-pages
              folder: release
              token: ${{ secrets.GITHUB_TOKEN }}
             
